replicaCount: 1

image:
  repository: registry
  pullPolicy: Always
  tag: "2"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  create: false
  annotations: {}
  name: ""

podAnnotations: {}
podSecurityContext: {}
securityContext: {}

probe:
  enabled: true

service:
  type: ClusterIP
  port: 80
  containerPort: 5000

ingress:
  enabled: true
  className: ""
#  annotations:
#    kubernetes.io/ingress.class: public
#    cert-manager.io/cluster-issuer: letsencrypt-issuer
#    nginx.ingress.kubernetes.io/enable-cors: "true"
#    nginx.ingress.kubernetes.io/configuration-snippet: |
#      proxy_set_header Origin https://registry.example.com;
#    nginx.ingress.kubernetes.io/proxy-body-size: "0"
#    nginx.ingress.kubernetes.io/proxy-read-timeout: "600"
#    nginx.ingress.kubernetes.io/proxy-send-timeout: "600"
  hosts:
    - host: registry.kushihiko.tech
      paths:
        - path: /
          pathType: ImplementationSpecific
#  tls:
#    - secretName: tls-secret-registry
#      hosts:
#        - registry.example.com

resources: {}

autoscaling:
  enabled: false

nodeSelector: {}
tolerations: []
affinity: {}

#config:
#  - name: registry-config
#    data:
#      - key: REGISTRY_AUTH
#        value: htpasswd
#      - key: REGISTRY_AUTH_HTPASSWD_REALM
#        value: Registry Realm
#      - key: REGISTRY_AUTH_HTPASSWD_PATH
#        value: ./htpasswd
#  - name: registry-htpasswd
#    data:
#      - key: passwd
#        value: "admin:$apr1$t/jfFJ08$r6hAbIBaMJoSP/5lb4qT91"

pvc:
  enabled: true
  config:
    - name: registry
      accessMode: ReadWriteMany
      storage:
        size: 40Gi
      mount:
        path: /var/lib/registry

#envconf:
#  enabled: true
#  config:
#    - name: registry-htpasswd
#      target: registry-htpasswd
#      key: passwd
#      subPath: htpasswd